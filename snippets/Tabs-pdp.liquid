<div class="tab-container">
    <div class="card">
      <div class="card__section card__section--tight">
    {%- if template.name == 'product' and template != 'product.quick-view' -%}
        <h1 class="product-meta__title heading h1">{{ product.title }}</h1>
      {%- else -%}
        <h3 class="product-meta__title heading h2">
          <a href="{{ product.url }}">{{ product.title }}</a>
        </h3>
      {%- endif -%}

<div class="tabs">
        <button class="tab-button active" onclick="openTab(event, 'Tab1')">Description</button>
        <button class="tab-button" onclick="openTab(event, 'Tab2')">Payment & Security</button>
        <button class="tab-button" onclick="openTab(event, 'Tab3')">Shipping & Returns</button>
    </div>

    <div id="Tab1" class="tab-content">
       {%- if product.description != blank -%}
            <div class="product-block-list__item product-block-list__item--description">
                  <div id="product-description" >                 
                      <div class="rte text--pull">
                        {{ product.description | remove: 'data-section-type="product"' }}
                      </div>    
                           <div class="gradient-overlay"  style="display:none;"></div>
                       <button class="read-more-description" style="display:none;">Read More</button>
              </div>
            </div>
          {%- endif -%}
      
    </div>

    <div id="Tab2" class="tab-content">
         {%- if section.settings.show_payment_icons and shop.enabled_payment_types.size > 0 -%}
            {%- assign show_payment_icons = true -%}
          {%- else -%}
            {%- assign show_payment_icons = false -%}
          {%- endif -%}

         {%- if section.settings.custom_security_badge or show_payment_icons -%}
            <div class="product-block-list__item product-block-list__item--trust">
              <div class="card" style="border:none !important">
                <div class="card__header card__header--flex">
                  <h2 class="card__title heading h3">{{ section.settings.trust_title | escape }}</h2>

                  {%- render 'icon' with 'lock', width: 22, height: 24 -%}
                </div>

                <div class="card__section">
                  {%- if show_payment_icons -%}
                    {%- if section.settings.custom_security_badge -%}
                      <p class="card__subtitle heading h6">{{ 'product.general.payment' | t }}</p>
                    {%- endif -%}

                    <div class="payment-list">
                      {% for type in shop.enabled_payment_types %}
                        {{ type | payment_type_svg_tag: class: 'payment-list__item' }}
                      {% endfor %}
                    </div>

                    <p class="payment-list__notice">{{ 'product.general.payment_notice' | t }}</p>
                  {%- endif -%}

                  {%- if show_payment_icons and section.settings.custom_security_badge -%}
                    <hr class="card__separator">
                  {%- endif -%}

                  {%- if section.settings.custom_security_badge -%}
                    {%- if show_payment_icons -%}
                      <p class="card__subtitle heading h6">{{ 'product.general.security' | t }}</p>
                    {%- endif -%}

                    {%- assign badge_width = section.settings.custom_security_badge.width | at_most: 450 | append: 'x' -%}
                    <img class="product__trust-badge" src="{{ section.settings.custom_security_badge | img_url: badge_width }}" srcset="{{ section.settings.custom_security_badge | img_url: badge_width }} 1x, {{ section.settings.custom_security_badge | img_url: badge_width, scale: 2 }} 2x" alt="{{ section.settings.custom_security_badge.alt | escape }}">
                  {%- endif -%}
                </div>
              </div>
            </div>
          {%- endif -%}
    </div>

    <div id="Tab3" class="tab-content">
      
          {%- for i in (1..3) -%}
            {%- assign global_tab_option = 'tab_page_' | append: i | append: '_handle' -%}
            {%- assign global_tab_page = pages[section.settings[global_tab_option]] -%}

            {%- unless global_tab_page.empty? -%}
              <div class="product-block-list__item product-block-list__item--content">              
                    <div id="global-tab-{{ i }}" >                 
                        <div class="rte text--pull">
                          {{ global_tab_page.content }}
                        </div>
              
                    </div>        
                 <div class="gradient-overlay-shipping"></div>
                       <button class="read-more">Read More</button>
              </div>
            {%- endunless -%}
          {%- endfor -%}

          {%- for i in (1..5) -%}
            {%- assign unique_tab_title = '' -%}
            {%- assign unique_tab_content = '' -%}

            {%- comment -%}First check for metafields{%- endcomment -%}

            {%- assign metafield_tab_title_option = 'tab_' | append: i | append: '_title' -%}
            {%- assign metafield_tab_content_option = 'tab_' | append: i | append: '_content' -%}

            {%- if product.metafields.sf_product_tabs[metafield_tab_title_option] != blank and product.metafields.sf_product_tabs[metafield_tab_content_option] != blank -%}
              {%- assign unique_tab_title = product.metafields.sf_product_tabs[metafield_tab_title_option] -%}
              {%- assign unique_tab_content = product.metafields.sf_product_tabs[metafield_tab_content_option] -%}
            {%- else -%}
              {%- assign tab_to_look = '__tab' | append: i | append: ':' -%}

              {%- for tag in product.tags -%}
                {%- if tag contains tab_to_look -%}
                  {%- assign unique_tab_handle = tag | split: tab_to_look | last -%}
                  {%- assign unique_tab_page = pages[unique_tab_handle] -%}

                  {%- unless unique_tab_page.empty? -%}
                    {%- assign unique_tab_title = unique_tab_page.title -%}
                    {%- assign unique_tab_content = unique_tab_page.content -%}
                    {%- break -%}
                  {%- endunless -%}
                {%- endif -%}
              {%- endfor -%}
            {%- endif -%}

            {%- if unique_tab_title != blank and unique_tab_content != blank -%}
              <div class="product-block-list__item product-block-list__item--content">
                <div class="card">
                  {%- if section.settings.collapse_content -%}
                    <button class="card__collapsible-button" data-action="toggle-collapsible" aria-expanded="false" aria-controls="unique-tab-{{ i }}">
                      <span class="card__title heading h3">{{ unique_tab_title }}</span>
                      <span class="plus-button plus-button--large"></span>
                    </button>

                    <div id="unique-tab-{{ i }}" class="card__collapsible">
                      <div class="card__collapsible-content">
                        <div class="rte text--pull">
                          {{ unique_tab_content }}
                        </div>
        
                      </div>
                    </div>
                  {%- else -%}
                    <div class="card__header">
                      <h2 class="card__title heading h3">{{ unique_tab_title }}</h2>
                    </div>

                    <div class="card__section expandable-content" aria-expanded="false">
                      <div class="rte text--pull">
                        {{ unique_tab_content }}
                      </div>

                      <button class="expandable-content__toggle">
                        <span class="expandable-content__toggle-icon"></span>
                        <span class="expandable-content__toggle-text" data-view-more="{{ 'product.general.view_more' | t | escape }}" data-view-less="{{ 'product.general.view_less' | t | escape }}">{{- 'product.general.view_more' | t -}}</span>
                      </button>
                    </div>
                  {%- endif -%}
                </div>
              </div>
            {%- endif -%}
          {%- endfor -%}
    
       <!-- <button class="read-less-btn" style="display: none;">Read Less</button> -->
      
    </div>
       
  </div>

    </div>

  </div>

   
<style>

.tab-container.expanded {
    height: auto; /* Allow expansion */
}

.read-less-btn {
    display: none;
}

  .tab-container{
     padding-left: 10px;
    padding-right: 10px; 
     overflow: hidden;
    transition: height 0.3s ease;
  }
.tabs {
    display: flex;
    border-bottom: 1px solid #ccc;
    border-top:1px solid #ccc;
      justify-content: space-between;
}

.tab-button {

    border: none;
    padding: 5px 17px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}
.tab-button.active, .tab-button:hover {
  
    color:  #ff6128;
    border-bottom: 2px solid #ff6128;
}

.tab-content {
    display: none;
    padding: 20px;
}

.tab-content.active {
    display: block;
}
@media only screen and (max-width: 1000px) {
  .Description_tab {
    display: flex;
    flex-direction: column;
  }
  .read-less-btn {
        color: #ff6128;
    text-decoration: underline;
    margin-left: 37%;
    margin-top: 20px;
  }
  /* .read-more-btn{
  color:#ff6128;
   text-decoration:underline;
  font-size:16px;
    margin-top:10px;
    margin-bottom:10px;
} */
}
 .product-block-list__item--description {
    position: relative;
  }
  .product-block-list__item--content{

position: relative;
   }

  .product-block-list__item--description .rte p {
    display: none;
  }
  .product-block-list__item--content .rte p{
    display: none;
  }

 .product-block-list__item--content .rte p:nth-child(-n+3) {
    display: block;
  }

  .product-block-list__item--description .rte p:nth-child(-n+4) {
    display: block;
  }

  .product-block-list__item--description .gradient-overlay {
    position: absolute;
    bottom: 35px; /* Adjust this value based on the height of your button */
    left: 0;
    right: 0;
    height: 100px;
    background: linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(255, 255, 255, 1));
    pointer-events: none; /* Prevent interaction with the gradient */
     border-bottom:1px solid #ccc;
  }

  .product-block-list__item--content .gradient-overlay-shipping {
    position: absolute;
    bottom: 35px; /* Adjust this value based on the height of your button */
    left: 0;
    right: 0;
    height: 100px;
    background: linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(255, 255, 255, 1));
    pointer-events: none; /* Prevent interaction with the gradient */
    border-bottom:1px solid #ccc;
  }


  .read-more, .read-less {
  color:#ff6128;
   text-decoration:underline;
  font-size:16px;
    margin-top:10px;
    margin-bottom:10px;
    width:100%;
  }
  .read-more-description{
     color:#ff6128;
     text-decoration:underline;
     font-size:16px;
    margin-top:10px;
    margin-bottom:10px;
     width:100%;
  }
.product-block-list__item--trust .cart{
 border:none;
}


</style>
<script>
document.addEventListener('DOMContentLoaded', function() {
  const readMoreBtn = document.querySelector('.read-more');
  const paragraphsShipping = document.querySelectorAll('.product-block-list__item--content .rte p');
  

    paragraphsShipping.forEach((p, index) => {
    if (index > 3) p.style.display = 'none';
  });

  readMoreBtn.addEventListener('click', function() {
    if (readMoreBtn.textContent === 'Read More') {
      paragraphsShipping.forEach(p => p.style.display = 'block');
      readMoreBtn.textContent = 'Read Less';
      readMoreBtn.classList.add('read-less');
      readMoreBtn.classList.remove('read-more');
       const overlays = document.querySelectorAll('.product-block-list__item--content .gradient-overlay-shipping');
    
      overlays.forEach(function(overlay) {
        overlay.style.setProperty('background', 'none', 'important');
      });
      
    } else {
      paragraphsShipping.forEach((p, index) => {
        if (index > 3) p.style.display = 'none';
      });
      readMoreBtn.textContent = 'Read More';
      readMoreBtn.classList.add('read-more');
      readMoreBtn.classList.remove('read-less');
         const overlays = document.querySelectorAll('.product-block-list__item--content .gradient-overlay-shipping');
    
      overlays.forEach(function(overlay) {
          overlay.style.setProperty('background', 'linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(255, 255, 255, 1))', 'important');
      });
    }
  });
});
document.addEventListener('DOMContentLoaded', function() {
  const readMoreBtn = document.querySelector('.read-more-description');
 const gradient=document.querySelector(".gradient-overlay")
  const paragraphsDescription = document.querySelectorAll('.product-block-list__item--description .rte p');
  // Initially show only the first 5 paragraphs
  
  paragraphsDescription.forEach((p, index) => {
    if (index > 3) p.style.display = 'none';
  });
    paragraphsDescription.forEach((p, index) => {
    if (index > 3){
      gradient.style.display='block';
      readMoreBtn.style.display = 'block';
    } 
  });

  readMoreBtn.addEventListener('click', function() {
    if (readMoreBtn.textContent === 'Read More') {
      paragraphsDescription.forEach(p => p.style.display = 'block');
      readMoreBtn.textContent = 'Read Less';
      readMoreBtn.classList.add('read-less');
      readMoreBtn.classList.remove('read-more');
      const overlays = document.querySelectorAll('.product-block-list__item--description .gradient-overlay');
    
      overlays.forEach(function(overlay) {
        overlay.style.setProperty('background', 'none', 'important');
      });
    } else {
      paragraphsDescription.forEach((p, index) => {
        if (index > 3) p.style.display = 'none';
      });
      readMoreBtn.textContent = 'Read More';
      readMoreBtn.classList.add('read-more');
      readMoreBtn.classList.remove('read-less');
      const overlays = document.querySelectorAll('.product-block-list__item--description .gradient-overlay');
    
      overlays.forEach(function(overlay) {
        overlay.style.setProperty('background', 'linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(255, 255, 255, 1))', 'important');
      });
    }
  });
});
</script>

  <script>
// document.addEventListener("DOMContentLoaded", function() {
//     const tabContainer = document.querySelector('.tab-container');
//     const productBlock = document.querySelector('.product-block-list__item--gallery');
//     const readMoreBtn = document.querySelector('.read-more-btn');
//     const readLessBtns = document.querySelectorAll('.read-less-btn');

//     // Set initial height of tab container to match product block
//     tabContainer.style.height = 500 + 'px';

//     readMoreBtn.addEventListener('click', function() {
//         tabContainer.classList.add('expanded');
//         tabContainer.style.height = 'auto';
//         readMoreBtn.style.display = 'none';
        
//         readLessBtns.forEach(btn => btn.style.display = 'block');
//     });

//     readLessBtns.forEach(function(readLessBtn) {
//         readLessBtn.addEventListener('click', function() {
//             tabContainer.classList.remove('expanded');
//             tabContainer.style.height = 500 + 'px';
//             readMoreBtn.style.display = 'block';
            
//             readLessBtns.forEach(btn => btn.style.display = 'none');
            
//             productBlock.scrollIntoView({ behavior: 'smooth' });
//         });
//     });
// });

    function openTab(evt, tabName) {
    let i, tabContent, tabButtons;

    // Hide all tab contents
    tabContent = document.getElementsByClassName("tab-content");
    for (i = 0; i < tabContent.length; i++) {
        tabContent[i].style.display = "none";
        tabContent[i].classList.remove("active");
    }

    // Remove the active class from all tab buttons
    tabButtons = document.getElementsByClassName("tab-button");
    for (i = 0; i < tabButtons.length; i++) {
        tabButtons[i].classList.remove("active");
    }

    // Show the current tab content and add an active class to the button that opened it
    document.getElementById(tabName).style.display = "block";
    document.getElementById(tabName).classList.add("active");
    evt.currentTarget.classList.add("active");
}

// Initialize by opening the first tab
document.addEventListener("DOMContentLoaded", function() {
    document.querySelector('.tab-button').click();
});

  </script>