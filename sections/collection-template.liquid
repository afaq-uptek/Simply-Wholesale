{%- comment -%}We start by creating a lot of useful variables !{%- endcomment -%}

{%- assign items_per_page = cart.attributes.collection_products_per_page | default: section.settings.default_products_per_page -%}

{%- assign has_visible_tags = false -%}

{%- if section.settings.show_filters -%}
  {%- if section.settings.filter_type == 'tag' -%}
    {%- for tag in collection.all_tags -%}
      {%- unless tag contains '__' -%}
        {%- assign has_visible_tags = true -%}
        {%- break -%}
      {%- endunless -%}
    {%- endfor -%}
  {%- elsif section.settings.filter_type == 'group' -%}
    {%- for tag in collection.all_tags -%}
      {%- assign tag_parts = tag | split: '_' -%}

      {%- if tag_parts.size == 2 -%}
        {%- assign has_visible_tags = true -%}
        {%- break -%}
      {%- endif -%}
    {%- endfor -%}
  {%- endif -%}
{%- endif -%}

{%- assign quick_links_menu = linklists[section.settings.quick_links] -%}

{%- if quick_links_menu.links.size > 0 or has_visible_tags -%}
  {%- assign has_filters = true -%}
{%- else -%}
  {%- assign has_filters = false -%}
{%- endif -%}

{%- if has_filters -%}
  {%- capture grid_classes -%}1/3--tablet-and-up 1/{{ section.settings.products_per_row }}--desk{%- endcapture -%}
{%- else -%}
  {%- capture grid_classes -%}1/3--tablet 1/{{ section.settings.products_per_row }}--lap-and-up{%- endcapture -%}
{%- endif -%}

{%- assign view_mode = cart.attributes.collection_layout | default: section.settings.default_view_layout -%}

{%- capture section_settings -%}
{
  "currentSortBy": {{ collection.sort_by | default: collection.default_sort_by | json }},
  "currentTags": [{% for tag in current_tags %}{{ tag | handle | json }}{% unless forloop.last %},{% endunless %}{% endfor %}],
  "filterType": {{ section.settings.filter_type | json }},
  "defaultLayout": {{ section.settings.default_view_layout | json }},
  "defaultProductsPerPage": {{ section.settings.default_products_per_page | json }},
  "isAutomatic": {% if collection.current_vendor != blank %}true{% else %}false{% endif %},
  "gridClasses": {{ grid_classes | json }}
}
{%- endcapture -%}

<section data-section-id="{{ section.id }}" data-section-type="collection" data-section-settings='{{ section_settings }}'>
  <div class="container container--flush">
    <div class="page__sub-header">
      <nav aria-label="{{ 'general.breadcrumb.title' | t }}" class="breadcrumb">
        <ol class="breadcrumb__list">
          <li class="breadcrumb__item">
            <a class="breadcrumb__link link" href="{{ routes.root_url }}">{{ 'general.breadcrumb.home' | t }}</a> {%- include 'icon' with 'arrow-right' -%}
          </li>

          <li class="breadcrumb__item">
            {%- if current_tags -%}
              <a class="breadcrumb__link link" href="{{ collection.url }}" {% unless current_tags %}aria-current="page"{% endunless %}>
                {%- if collection.handle == 'all' -%}
                  {{- 'collection.general.all_products' | t -}}
                {%- else -%}
                  {{- collection.title -}}
                {%- endif -%}
              </a>

              {%- include 'icon' with 'arrow-right' -%}
            {%- else -%}
              <span class="breadcrumb__link" aria-current="page">
                {%- if collection.handle == 'all' -%}
                  {{- 'collection.general.all_products' | t -}}
                {%- else -%}
                  {{- collection.title -}}
                {%- endif -%}
              </span>
            {%- endif -%}
          </li>

          {%- if current_tags -%}
            <li class="breadcrumb__item">
              {%- if section.settings.filter_type == 'tag' -%}
                {%- assign tag = current_tags.first -%}
              {%- elsif section.settings.filter_type == 'group' -%}
                {%- assign tag = current_tags.first | split: '_' | last -%}
              {%- endif -%}

              <span class="breadcrumb__link" aria-current="page">{{ tag | capitalize }}</span>
            </li>
          {%- endif -%}
        </ol>
      </nav>
    </div>

 {% render 'searchanise-navigation' %}
  </div>

  {%- comment -%}
  --------------------------------------------------------------------------------------
  MOBILE FILTER SIDEBAR

  Implementation note: the code is quite similar to the one that powers the desktop
  navigation. Unfortunately there are some subtle differences that forced me to duplicate
  a large part of the code :(.
  --------------------------------------------------------------------------------------
  {%- endcomment -%}

  {%- if has_filters -%}
    <div id="mobile-collection-filters" class="drawer" aria-hidden="true">
      <div class="drawer__inner">
        <div class="collection-drawer">
          <header class="collection-drawer__header">
            <div>
              <button class="collection-drawer__close" data-action="close-drawer">{% include 'icon' with 'close' %}</button>
              <span class="collection-drawer__title heading h3">{{ 'collection.filter.all' | t }} <span class="collection-drawer__filter-count" {% if current_tags == blank %}style="display: none"{% endif %}>({{ current_tags | size }})</span></span>
            </div>

            <button class="button button--transparent button--extra-small" data-action="clear-tags" {% if current_tags == blank %}style="display: none"{% endif %}>{{ 'collection.filter.clear' | t }}</button>
          </header>

          <div class="collection-drawer__inner">
            {%- if quick_links_menu.links.size > 0 -%}
              {%- capture link_id -%}filter-{% increment link_id %}{%- endcapture -%}

              <p class="collection-drawer__section-title">{{ quick_links_menu.title }}</p>

              <div class="collection__filter-group">
                <button class="collection__filter-group-name text--strong" aria-expanded="false" aria-controls="{{ link_id }}" data-action="toggle-collapsible" data-close-siblings="false">
                  {{- 'collection.filter.select_category' | t -}}
                  {%- include 'icon' with 'arrow-bottom' -%}
                </button>

                <div id="{{ link_id }}" class="collection__filter-collapsible" aria-hidden="true">
                  <ul class="collection__filter-linklist">
                    {%- for link in quick_links_menu.links -%}
                      <li>
                        {%- if link.links.size > 0 -%}
                          {%- capture link_id -%}filter-{% increment link_id %}{%- endcapture -%}

                          <button class="collection__filter-link link link--primary {% if link.active or link.child_active %}is-active{% endif %}" data-action="toggle-collapsible" aria-controls="{{ link_id }}" aria-expanded="false">
                            {{ link.title }} {% if link.type == 'collection_link' and section.settings.quick_links_show_products_count %}({{ link.object.products_count }}){% endif %} {%- include 'icon' with 'arrow-bottom' -%}
                          </button>

                          <div id="{{ link_id }}" class="collection__filter-collapsible" aria-hidden="true">
                            <ul class="collection__filter-linklist">
                              {%- for sub_link in link.links -%}
                                <li>
                                  <a href="{{ sub_link.url }}" class="collection__filter-link link link--primary {% if sub_link.active %}is-active{% endif %}">{{ sub_link.title }} {% if sub_link.type == 'collection_link' and section.settings.quick_links_show_products_count %}({{ sub_link.object.products_count }}){% endif %}</a>
                                </li>
                              {%- endfor -%}
                            </ul>
                          </div>
                        {%- else -%}
                          <a href="{{ link.url }}" class="collection__filter-link link link--primary {% if link.active or link.child_active %}is-active{% endif %}">{{ link.title }} {% if link.type == 'collection_link' and section.settings.quick_links_show_products_count %}({{ link.object.products_count }}){% endif %}</a>
                        {%- endif -%}
                      </li>
                    {%- endfor -%}
                  </ul>
                </div>
              </div>
            {%- endif -%}

            {%- if has_visible_tags -%}
              <p class="collection-drawer__section-title">{{ 'collection.filter.all' | t }}</p>

              {%- if section.settings.filter_type == 'tag' -%}
                <div class="collection__filter-group">
                  <ul class="collection__filter-checkbox-list">
                    {%- for tag in collection.all_tags -%}
                      {%- comment -%}Tags that start by two consecutive underscores (__) are used for internal purpose and must be removed from here{%- endcomment -%}

                      {%- unless tag contains '__' -%}
                        <li class="collection__filter-checkbox">
                          <div class="checkbox-wrapper">
                            <input type="checkbox" class="checkbox" id="{{ link_id }}-tag-{{ tag | handle }}" name="tag-filter" data-action="toggle-tag" data-tag="{{ tag | handle }}" {% if current_tags contains tag %}checked="checked"{% endif %}>
                            {% include 'icon' with 'check' %}
                          </div>

                          <label for="{{ link_id }}-tag-{{ tag | handle }}">{{ tag }}</label>
                        </li>
                      {%- endunless -%}
                    {%- endfor -%}
                  </ul>
                </div>
              {%- elsif section.settings.filter_type == 'group' -%}
                {%- assign groups = '' -%}

                {%- for tag in collection.all_tags -%}
                  {%- assign tag_parts = tag | split: '_' -%}

                  {%- if tag_parts.size != 2 -%}
                    {%- continue -%}
                  {%- endif -%}

                  {%- assign groups = groups | append: tag_parts.first | append: ',' -%}
                {% endfor %}

                {%- assign color_label = 'color,colour,couleur,colore,farbe,색,色,カラー,färg,farve' | split: ',' -%}
                {%- assign groups = groups | split: ',' | compact | uniq -%}

                {%- assign groups_order = section.settings.filter_group_order | downcase | strip | replace: ', ', ',' | split: ',' -%}

                <div class="collection__filter-group-list {% if groups_order.size > 0 %}collection__filter-group-list--ordered{% endif %}">
                  {%- for group in groups -%}
                    {%- assign group_downcase = group | downcase -%}

                    {%- comment -%}
                    If we are within the special "brand" alternate template, then we do not show the "brand" or "vendor" group
                    {%- endcomment -%}

                    {%- if collection.template_suffix == 'brand' -%}
                      {%- assign brand_label = 'brand,vendor,marque' | split: ',' -%}

                      {%- if brand_label contains group_downcase -%}
                        {%- continue -%}
                      {%- endif -%}
                    {%- endif -%}

                    {%- if color_label contains group_downcase and section.settings.show_filter_color_swatch -%}
                      {%- assign show_color_swatch = true -%}
                    {%- else -%}
                      {%- assign show_color_swatch = false -%}
                    {%- endif -%}

                    {%- assign has_active_tag_from_group = false -%}

                    {%- for tag in current_tags -%}
                      {%- assign current_tag_parts = tag | split: '_' -%}
                      {%- assign current_tag_group_downcase = current_tag_parts.first | downcase -%}

                      {%- if group_downcase == current_tag_group_downcase -%}
                        {%- assign has_active_tag_from_group = true -%}
                        {%- break -%}
                      {%- endif -%}
                    {%- endfor -%}

                    {%- assign current_group_order = 99 -%}

                    {%- if groups_order contains group_downcase -%}
                      {%- for group_order_name in groups_order -%}
                        {%- if group_order_name == group_downcase -%}
                          {%- assign current_group_order = forloop.index -%}
                          {%- break -%}
                        {%- endif -%}
                      {%- endfor -%}
                    {%- endif -%}

                    <div class="collection__filter-group" {% if groups_order.size > 0 %}style="order: {{ current_group_order }}"{% endif %}>
                      {%- capture link_id -%}filter-{% increment link_id %}{%- endcapture -%}

                      <button class="collection__filter-group-name link link--secondary text--strong" data-action="toggle-collapsible" aria-controls="{{ link_id }}" data-close-siblings="false" aria-expanded="false">
                        <div>
                          {{- group -}}
                          <span class="collection__filter-item-active" {% unless has_active_tag_from_group %}style="display: none"{% endunless %}>{{ current_tag_parts.last }}</span>
                        </div>

                        {%- include 'icon' with 'arrow-bottom' -%}
                      </button>

                      <div id="{{ link_id }}" class="collection__filter-collapsible" aria-hidden="true">
                        {%- if show_color_swatch -%}
                          <div class="collection__filter-color-list">
                            <div class="color-swatch-list color-swatch-list--stack">
                              {%- for tag in collection.all_tags -%}
                                {%- assign tag_parts = tag | split: '_' -%}

                                {%- if tag_parts.first != group -%}
                                  {%- continue -%}
                                {%- endif -%}

                                {%- assign downcased_value = tag_parts.last | downcase -%}
                                {%- capture color_id -%}filter-color-{% increment color_index %}{%- endcapture -%}

                                {%- assign color_swatch_name = tag_parts.last | handle | append: '.png' -%}
                                {%- assign color_swatch_image = images[color_swatch_name] -%}

                                <div class="color-swatch {% if downcased_value == 'white' or downcased_value == 'blanc' %}color-swatch--white{% endif %}">
                                  <button type="button" class="color-swatch__button color-swatch__button--labelled {% if current_tags contains tag %}is-selected{% endif %}" data-action="toggle-tag" data-tag="{{ tag | handle }}" data-tag-user="{{ tag_parts.last | escape }}">
                                    <span class="color-swatch__item" style="background-color: {{ downcased_value | replace: ' ', '' | downcase }}; {% if color_swatch_image != blank %}background-image: url({{ color_swatch_image | img_url: '64x64' }}){% endif %}"></span>
                                    <span class="color-swatch__label">{{ tag_parts.last }}</span>
                                  </button>
                                </div>
                              {%- endfor -%}
                            </div>
                          </div>
                        {%- else -%}
                          <ul class="collection__filter-checkbox-list">
                            {%- for tag in collection.all_tags -%}
                              {%- assign tag_parts = tag | split: '_' -%}

                              {%- if tag_parts.first != group -%}
                                {%- continue -%}
                              {%- endif -%}

                              <li class="collection__filter-checkbox">
                                <div class="checkbox-wrapper">
                                  <input type="checkbox" class="checkbox" id="{{ link_id }}-tag-{{ tag | handle }}" name="tag-{{ tag_parts.first | handle }}" data-action="toggle-tag" data-tag="{{ tag | handle }}" data-tag-user="{{ tag_parts.last | escape }}" {% if current_tags contains tag %}checked="checked"{% endif %}>
                                  {% include 'icon' with 'check' %}
                                </div>

                                <label for="{{ link_id }}-tag-{{ tag | handle }}">{{ tag_parts.last }}</label>
                              </li>
                            {%- endfor -%}
                          </ul>
                        {%- endif -%}
                      </div>
                    </div>
                  {%- endfor -%}
                </div>
              {%- endif -%}
            {%- endif -%}
          </div>

          <div class="collection-drawer__footer">
            <button class="button button--primary button--small button--full" data-action="close-drawer">{{ 'collection.filter.view_results' | t }}</button>
          </div>
        </div>
      </div>
    </div>
  {%- endif -%}

  {%- comment -%}
  --------------------------------------------------------------------------------------
  QUICK VIEW CONTAINER
  --------------------------------------------------------------------------------------
  {%- endcomment -%}

  <div id="modal-quick-view-{{ section.id }}" class="modal" aria-hidden="true">
    <div class="modal__dialog modal__dialog--stretch" role="dialog">
      <button class="modal__close link" data-action="close-modal">{%- include 'icon' with 'close' -%}</button>

      <div class="modal__loader">
        {%- include 'icon' with 'search-loader' -%}
      </div>

      <div class="modal__inner"></div>
    </div>
  </div>
</section>

{% schema %}
{
  "name": "Collection page",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_collection_image",
      "label": "Show collection image",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "collapse_collection_description",
      "label": "Collapse long description",
      "default": false
    },
    {
      "type": "select",
      "id": "collection_image_size",
      "label": "Collection image size",
      "options": [
        {
          "value": "small",
          "label": "Small"
        },
        {
          "value": "medium",
          "label": "Medium"
        },
        {
          "value": "large",
          "label": "Large"
        }
      ],
      "default": "small"
    },
    {
      "type": "select",
      "id": "products_per_row",
      "label": "Products per row (desktop)",
      "options": [
        {
          "value": "3",
          "label": "3"
        },
        {
          "value": "4",
          "label": "4"
        }
      ],
      "default": "4"
    },
    {
      "type": "range",
      "id": "default_products_per_page",
      "label": "Default products per page",
      "min": 24,
      "max": 48,
      "step": 12,
      "default": 24
    },
    {
      "type": "select",
      "id": "default_view_layout",
      "label": "Default view layout",
      "options": [
        {
          "value": "grid",
          "label": "Grid"
        },
        {
          "value": "list",
          "label": "List"
        }
      ],
      "default": "grid"
    },
    {
      "type": "select",
      "id": "show_quick_buy",
      "label": "Show quick buy on...",
      "options": [
        {
          "value": "list",
          "label": "List view"
        },
        {
          "value": "list_grid",
          "label": "List and grid views"
        }
      ],
      "default": "list"
    },
    {
      "type": "select",
      "id": "show_quick_view",
      "label": "Show quick view on...",
      "options": [
        {
          "value": "list",
          "label": "List view"
        },
        {
          "value": "list_grid",
          "label": "List and grid views"
        }
      ],
      "default": "list"
    },
    {
      "type": "header",
      "content": "Sidebar"
    },
    {
      "type": "link_list",
      "id": "quick_links",
      "label": "Quick links",
      "info": "This menu has limited support for dropdown items."
    },
    {
      "type": "checkbox",
      "id": "quick_links_show_products_count",
      "label": "Show products count",
      "info": "Only for collection links",
      "default": true
    },
    {
      "type": "header",
      "content": "Filtering"
    },
    {
      "type": "checkbox",
      "id": "show_filters",
      "label": "Show filters",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_filter_color_swatch",
      "label": "Show filter color swatch",
      "info": "Requires filter type \"By group\" to be selected.",
      "default": true
    },
    {
      "type": "select",
      "id": "filter_type",
      "label": "Filter type",
      "info": "Filters by group requires specific tag formatting. [Learn more](https://help.shopify.com/manual/using-themes/themes-by-shopify/supply#product-tips-tips-specific)",
      "options": [
        {
          "value": "tag",
          "label": "By tag"
        },
        {
          "value": "group",
          "label": "By group"
        }
      ],
      "default": "tag"
    },
    {
      "type": "select",
      "id": "open_group_filters_mode",
      "label": "Filter opening mode (desktop)",
      "options": [
        {
          "value": "all_closed",
          "label": "All closed"
        },
        {
          "value": "all_open",
          "label": "All open"
        },
        {
          "value": "first_open",
          "label": "First open"
        }
      ],
      "default": "all_closed"
    },
    {
      "type": "text",
      "id": "filter_group_order",
      "label": "Group order",
      "info": "List items must be identical to the group name. If left empty, all groups will be displayed in alphabetical order. Example: Color, Brand, Size."
    }
  ]
}
{% endschema %}